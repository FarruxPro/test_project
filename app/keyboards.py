from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from app.database.models import Subscription, async_session
from sqlalchemy import select

premium = True

subscriptions_data = 'my_subscriptions' if premium else 'no_subscription'

main = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚≠êÔ∏è–ü—Ä–æ–≥—Ä–∞–º–º—ã –®–∫–æ–ª—ã', callback_data='school_programs')],
    [InlineKeyboardButton(text='‚ú®–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏', callback_data=subscriptions_data)],
    [InlineKeyboardButton(text='üí¨–°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', url="https://ChatBotStart.com")]
])

school_programs = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üìö–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ', callback_data='school_subscription_training')],
    [InlineKeyboardButton(text='üöÄ–ü–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è', url="https://yotube.com")],
    [InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data='main')]
])

my_subscriptions = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üìö–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ', callback_data='my_subscriptions_traning')],
    [InlineKeyboardButton(text='üöÄ–ü–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è', url="https://yotube.com")],
    [InlineKeyboardButton(text='‚ûï–ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', url="https://yotube.com")],
    [InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data='main')]
])

no_subscription = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚≠êÔ∏è–ü—Ä–æ–≥—Ä–∞–º–º—ã –®–∫–æ–ª—ã', callback_data='school_programs')],
    [InlineKeyboardButton(text='üí¨–°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', url="https://ChatBotStart.com")],
    [InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data='main')]
])

school_subscription_training = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üí¨–°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', url="https://ChatBotStart.com")],
    [InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data='school_programs')]
])

my_subscriptions_traning = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ö–∞–Ω–∞–ª 1', url="https://ChatBotStart.com")],
    [InlineKeyboardButton(text='–ì—Ä—É–ø–ø–∞ 1', url="https://ChatBotStart.com")],
    [InlineKeyboardButton(text='–ö–∞–Ω–∞–ª 2', url="https://ChatBotStart.com")],
    [InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data='my_subscriptions')]
])

# Admin
admin = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏', callback_data='subscription_management')],
    [InlineKeyboardButton(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data='static_but')],
    [InlineKeyboardButton(text='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', callback_data='user_management')]
])

# User
user_management = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data='user_list')],
    [InlineKeyboardButton(text='–ù–∞–∑–Ω–∞—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', callback_data='assign_subscription')],
    [InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', url="https://yotube.com")],
    [InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞', url="https://yotube.com")],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='admin')]
])

user_list = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='user_management')]
])

# Sub
subscription_management = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data='add_subscription')],
    [InlineKeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data='edit_subscription')],
    [InlineKeyboardButton(text='–°–∫—Ä—ã—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data='hide_subscription')],
    [InlineKeyboardButton(text='–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data='restore_subscription')],
    [InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data='delete_subscription')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='admin')]
])

add_subscription = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω—É –ø–æ–¥–ø–∏—Å–∫—É', callback_data='add_subscription')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='subscription_management')]
])


back_sub = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='subscription_management')]
])

# –≤—ã–≤–æ–¥ –∫–Ω–æ–ø–æ–∫ –ø–æ –∏–º–µ–Ω–∏ –ø–æ–¥–ø–∏—Å–∫–∏.
# —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
async def edit_subscription() -> InlineKeyboardMarkup:
    # —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    async with async_session() as session:
        result = await session.execute(
            # –≤—ã–±–∏—Ä–∞–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
            select(Subscription)
        )
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –º–æ–¥–µ–ª–∏
        subscriptions = result.scalars().all()
        # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, —É –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–ª–µ is_hidden ‚Äî False
        for sub in subscriptions:
            if sub.is_hidden == False:
                keyboard.inline_keyboard.append(
                    [InlineKeyboardButton(text=sub.name, callback_data=f"sub_{sub.id}")])

    keyboard.inline_keyboard.append(
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='subscription_management')])

    return keyboard

# –∫–Ω–æ–ø–∫–∞ —á—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
def get_subscription_detail_keyboard(sub_id: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"name_{sub_id}")],
        [InlineKeyboardButton(text="–û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"description_{sub_id}")],
        [InlineKeyboardButton(text="–ö–∞–Ω–∞–ª—ã/–≥—Ä—É–ø–ø—ã", callback_data=f"channels_{sub_id}")],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="subscription_management")]
    ])

#—Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –ø–æ–¥–ø–∏—Å–æ–∫
async def hide_subscription() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])

    async with async_session() as session:
        result = await session.execute(select(Subscription))
        subscriptions = result.scalars().all()

        for sub in subscriptions:
            if sub.is_hidden == False:
                keyboard.inline_keyboard.append(
                    [InlineKeyboardButton(text=sub.name, callback_data=f"hide_{sub.id}")])

    keyboard.inline_keyboard.append(
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='subscription_management')])

    return keyboard

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
async def restore_subscription() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])

    async with async_session() as session:
        result = await session.execute(select(Subscription))
        subscriptions = result.scalars().all()

        for sub in subscriptions:
            if sub.is_hidden == True:
                keyboard.inline_keyboard.append(
                    [InlineKeyboardButton(text=sub.name, callback_data=f"res_{sub.id}")])

    keyboard.inline_keyboard.append(
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='subscription_management')])

    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
async def delete_subscription() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])

    async with async_session() as session:
        result = await session.execute(select(Subscription))
        subscriptions = result.scalars().all()

        for sub in subscriptions:
            if sub.is_hidden == False:
                keyboard.inline_keyboard.append(
                    [InlineKeyboardButton(text=sub.name, callback_data=f"del_{sub.id}")])

    keyboard.inline_keyboard.append(
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='subscription_management')])

    return keyboard


async def delete__sub(del_id: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard = [
        [InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ', callback_data=f'delete_{del_id}')],
        [InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='subscription_management')]
    ])


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏

static_but = InlineKeyboardMarkup(inline_keyboard= [
    [InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥', callback_data='date_static')],
    [InlineKeyboardButton(text='–í—ã–±—Ä–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data='subscription_static')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='admin')]
])

async def subscription_static() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])

    async with async_session() as session:
        result = await session.execute(select(Subscription))
        subscriptions = result.scalars().all()

        for sub in subscriptions:
            if sub.is_hidden == False:
                keyboard.inline_keyboard.append(
                    [InlineKeyboardButton(text=sub.name, callback_data=f"static_{sub.id}")])

    keyboard.inline_keyboard.append(
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='static_but')])

    return keyboard

static_menu = InlineKeyboardMarkup(inline_keyboard= [
    [InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data='admin')]
])